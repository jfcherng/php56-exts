 #include "xcache.h" 
 #include "mod_cacher/xc_cache.h" 
 #include "xcache/xc_shm.h" 
 #include "xcache/xc_allocator.h" 
 typedef struct _xc_processor_t xc_processor_t; 
 typedef struct _xc_dasm_t { const zend_op_array *active_op_array_src; } xc_dasm_t; 
 xc_entry_var_t *xc_processor_store_xc_entry_var_t(xc_shm_t *shm, xc_allocator_t *allocator, xc_entry_var_t *src TSRMLS_DC); 
 xc_entry_php_t *xc_processor_store_xc_entry_php_t(xc_shm_t *shm, xc_allocator_t *allocator, xc_entry_php_t *src TSRMLS_DC); 
 xc_entry_data_php_t *xc_processor_store_xc_entry_data_php_t(xc_shm_t *shm, xc_allocator_t *allocator, xc_entry_data_php_t *src TSRMLS_DC); 
 xc_entry_php_t *xc_processor_restore_xc_entry_php_t(xc_entry_php_t *dst, const xc_entry_php_t *src TSRMLS_DC); 
 xc_entry_data_php_t *xc_processor_restore_xc_entry_data_php_t(const xc_entry_php_t *entry_php, xc_entry_data_php_t *dst, const xc_entry_data_php_t *src, zend_bool readonly_protection TSRMLS_DC); 
 xc_entry_var_t *xc_processor_restore_xc_entry_var_t(xc_entry_var_t *dst, const xc_entry_var_t *src TSRMLS_DC); 
 zval *xc_processor_restore_zval(zval *dst, const zval *src, zend_bool have_references TSRMLS_DC); 
 void xc_dprint(xc_entry_php_t *src, int indent TSRMLS_DC); 
  	  	 	void 	xc_calc_HashTable_zend_function( 		 		xc_processor_t *processor, const HashTable * const src 		 		 		 		TSRMLS_DC 	); 	 
  	  	 	void 	xc_calc_zend_ast( 		 		xc_processor_t *processor, const zend_ast * const src 		 		 		 		TSRMLS_DC 	); 	 
  	  	 	void 	xc_calc_zval( 		 		xc_processor_t *processor, const zval * const src 		 		 		 		TSRMLS_DC 	); 	 
  	  	 	void 	xc_calc_zend_function( 		 		xc_processor_t *processor, const zend_function * const src 		 		 		 		TSRMLS_DC 	); 	 
  	  	 	void 	xc_calc_zend_class_entry( 		 		xc_processor_t *processor, const zend_class_entry * const src 		 		 		 		TSRMLS_DC 	); 	 
  	  	 	void 	xc_calc_zend_op( 		 		xc_processor_t *processor, const zend_op * const src 		 		 		 		TSRMLS_DC 	); 	 
  	  	 	void 	xc_calc_zend_op_array( 		 		xc_processor_t *processor, const zend_op_array * const src 		 		 		 		TSRMLS_DC 	); 	 
  	  	 	void 	xc_calc_xc_funcinfo_t( 		 		xc_processor_t *processor, const xc_funcinfo_t * const src 		 		 		 		TSRMLS_DC 	); 	 
  	  	 	void 	xc_calc_xc_classinfo_t( 		 		xc_processor_t *processor, const xc_classinfo_t * const src 		 		 		 		TSRMLS_DC 	); 	 
  	  	 	void 	xc_calc_xc_entry_data_php_t( 		 		xc_processor_t *processor, const xc_entry_data_php_t * const src 		 		 		 		TSRMLS_DC 	); 	 
  	  	 	void 	xc_calc_xc_entry_php_t( 		 		xc_processor_t *processor, const xc_entry_php_t * const src 		 		 		 		TSRMLS_DC 	); 	 
  	  	 	void 	xc_calc_xc_entry_var_t( 		 		xc_processor_t *processor, const xc_entry_var_t * const src 		 		 		 		TSRMLS_DC 	); 	 
  	  	 	void 	xc_store_HashTable_zend_function( 		 		 		xc_processor_t *processor, HashTable *dst, const HashTable * const src 		 		 		TSRMLS_DC 	); 	 
  	  	 	void 	xc_store_zend_ast( 		 		 		xc_processor_t *processor, zend_ast *dst, const zend_ast * const src 		 		 		TSRMLS_DC 	); 	 
  	  	 	void 	xc_store_zval( 		 		 		xc_processor_t *processor, zval *dst, const zval * const src 		 		 		TSRMLS_DC 	); 	 
  	  	 	void 	xc_store_zend_function( 		 		 		xc_processor_t *processor, zend_function *dst, const zend_function * const src 		 		 		TSRMLS_DC 	); 	 
  	  	 	void 	xc_store_zend_class_entry( 		 		 		xc_processor_t *processor, zend_class_entry *dst, const zend_class_entry * const src 		 		 		TSRMLS_DC 	); 	 
  	  	 	void 	xc_store_zend_op( 		 		 		xc_processor_t *processor, zend_op *dst, const zend_op * const src 		 		 		TSRMLS_DC 	); 	 
  	  	 	void 	xc_store_zend_op_array( 		 		 		xc_processor_t *processor, zend_op_array *dst, const zend_op_array * const src 		 		 		TSRMLS_DC 	); 	 
  	  	 	void 	xc_store_xc_funcinfo_t( 		 		 		xc_processor_t *processor, xc_funcinfo_t *dst, const xc_funcinfo_t * const src 		 		 		TSRMLS_DC 	); 	 
  	  	 	void 	xc_store_xc_classinfo_t( 		 		 		xc_processor_t *processor, xc_classinfo_t *dst, const xc_classinfo_t * const src 		 		 		TSRMLS_DC 	); 	 
  	  	 	void 	xc_store_xc_entry_data_php_t( 		 		 		xc_processor_t *processor, xc_entry_data_php_t *dst, const xc_entry_data_php_t * const src 		 		 		TSRMLS_DC 	); 	 
  	  	 	void 	xc_store_xc_entry_php_t( 		 		 		xc_processor_t *processor, xc_entry_php_t *dst, const xc_entry_php_t * const src 		 		 		TSRMLS_DC 	); 	 
  	  	 	void 	xc_store_xc_entry_var_t( 		 		 		xc_processor_t *processor, xc_entry_var_t *dst, const xc_entry_var_t * const src 		 		 		TSRMLS_DC 	); 	 
  	  	 	void 	xc_restore_HashTable_zend_function( 		 		 		 		xc_processor_t *processor, HashTable *dst, const HashTable * const src 		 		TSRMLS_DC 	); 	 
  	  	 	void 	xc_restore_zend_ast( 		 		 		 		xc_processor_t *processor, zend_ast *dst, const zend_ast * const src 		 		TSRMLS_DC 	); 	 
  	  	 	void 	xc_restore_zval( 		 		 		 		xc_processor_t *processor, zval *dst, const zval * const src 		 		TSRMLS_DC 	); 	 
  	  	 	void 	xc_restore_zend_function( 		 		 		 		xc_processor_t *processor, zend_function *dst, const zend_function * const src 		 		TSRMLS_DC 	); 	 
  	  	 	void 	xc_restore_zend_class_entry( 		 		 		 		xc_processor_t *processor, zend_class_entry *dst, const zend_class_entry * const src 		 		TSRMLS_DC 	); 	 
  	  	 	void 	xc_restore_zend_op( 		 		 		 		xc_processor_t *processor, zend_op *dst, const zend_op * const src 		 		TSRMLS_DC 	); 	 
  	  	 	void 	xc_restore_zend_op_array( 		 		 		 		xc_processor_t *processor, zend_op_array *dst, const zend_op_array * const src 		 		TSRMLS_DC 	); 	 
  	  	 	void 	xc_restore_xc_funcinfo_t( 		 		 		 		xc_processor_t *processor, xc_funcinfo_t *dst, const xc_funcinfo_t * const src 		 		TSRMLS_DC 	); 	 
  	  	 	void 	xc_restore_xc_classinfo_t( 		 		 		 		xc_processor_t *processor, xc_classinfo_t *dst, const xc_classinfo_t * const src 		 		TSRMLS_DC 	); 	 
  	  	 	void 	xc_restore_xc_entry_data_php_t( 		 		 		 		xc_processor_t *processor, xc_entry_data_php_t *dst, const xc_entry_data_php_t * const src 		 		TSRMLS_DC 	); 	 
  	  	 	void 	xc_restore_xc_entry_php_t( 		 		 		 		xc_processor_t *processor, xc_entry_php_t *dst, const xc_entry_php_t * const src 		 		TSRMLS_DC 	); 	 
  	  	 	void 	xc_restore_xc_entry_var_t( 		 		 		 		xc_processor_t *processor, xc_entry_var_t *dst, const xc_entry_var_t * const src 		 		TSRMLS_DC 	); 	 
  	  	 	void 	xc_dprint_HashTable_zend_function( 		const HashTable * const src, int indent 		 		 		 		 		TSRMLS_DC 	); 	 
  	  	 	void 	xc_dprint_zend_ast( 		const zend_ast * const src, int indent 		 		 		 		 		TSRMLS_DC 	); 	 
  	  	 	void 	xc_dprint_zval( 		const zval * const src, int indent 		 		 		 		 		TSRMLS_DC 	); 	 
  	  	 	void 	xc_dprint_zend_function( 		const zend_function * const src, int indent 		 		 		 		 		TSRMLS_DC 	); 	 
  	  	 	void 	xc_dprint_zend_class_entry( 		const zend_class_entry * const src, int indent 		 		 		 		 		TSRMLS_DC 	); 	 
  	  	 	void 	xc_dprint_zend_op( 		const zend_op * const src, int indent 		 		 		 		 		TSRMLS_DC 	); 	 
  	  	 	void 	xc_dprint_zend_op_array( 		const zend_op_array * const src, int indent 		 		 		 		 		TSRMLS_DC 	); 	 
  	  	 	void 	xc_dprint_xc_funcinfo_t( 		const xc_funcinfo_t * const src, int indent 		 		 		 		 		TSRMLS_DC 	); 	 
  	  	 	void 	xc_dprint_xc_classinfo_t( 		const xc_classinfo_t * const src, int indent 		 		 		 		 		TSRMLS_DC 	); 	 
  	  	 	void 	xc_dprint_xc_entry_data_php_t( 		const xc_entry_data_php_t * const src, int indent 		 		 		 		 		TSRMLS_DC 	); 	 
  	  	 	void 	xc_dprint_xc_entry_php_t( 		const xc_entry_php_t * const src, int indent 		 		 		 		 		TSRMLS_DC 	); 	 
  	  	 	void 	xc_dprint_xc_entry_var_t( 		const xc_entry_var_t * const src, int indent 		 		 		 		 		TSRMLS_DC 	); 	 
  	  	 	void 	xc_dasm_HashTable_zend_function( 		 		 		 		 		xc_dasm_t *dasm, zval *dst, const HashTable * const src 		TSRMLS_DC 	); 	 
  	  	 	void 	xc_dasm_zend_ast( 		 		 		 		 		xc_dasm_t *dasm, zval *dst, const zend_ast * const src 		TSRMLS_DC 	); 	 
  	  	 	void 	xc_dasm_zval( 		 		 		 		 		xc_dasm_t *dasm, zval *dst, const zval * const src 		TSRMLS_DC 	); 	 
  	  	 	void 	xc_dasm_zend_function( 		 		 		 		 		xc_dasm_t *dasm, zval *dst, const zend_function * const src 		TSRMLS_DC 	); 	 
  	  	 	void 	xc_dasm_zend_class_entry( 		 		 		 		 		xc_dasm_t *dasm, zval *dst, const zend_class_entry * const src 		TSRMLS_DC 	); 	 
  	  	 	void 	xc_dasm_zend_op( 		 		 		 		 		xc_dasm_t *dasm, zval *dst, const zend_op * const src 		TSRMLS_DC 	); 	 
  	  	 	void 	xc_dasm_zend_op_array( 		 		 		 		 		xc_dasm_t *dasm, zval *dst, const zend_op_array * const src 		TSRMLS_DC 	); 	 
  	  	 	void 	xc_dasm_xc_funcinfo_t( 		 		 		 		 		xc_dasm_t *dasm, zval *dst, const xc_funcinfo_t * const src 		TSRMLS_DC 	); 	 
  	  	 	void 	xc_dasm_xc_classinfo_t( 		 		 		 		 		xc_dasm_t *dasm, zval *dst, const xc_classinfo_t * const src 		TSRMLS_DC 	); 	 
  	  	 	void 	xc_dasm_xc_entry_data_php_t( 		 		 		 		 		xc_dasm_t *dasm, zval *dst, const xc_entry_data_php_t * const src 		TSRMLS_DC 	); 	 
  	  	 	void 	xc_dasm_xc_entry_php_t( 		 		 		 		 		xc_dasm_t *dasm, zval *dst, const xc_entry_php_t * const src 		TSRMLS_DC 	); 	 
  	  	 	void 	xc_dasm_xc_entry_var_t( 		 		 		 		 		xc_dasm_t *dasm, zval *dst, const xc_entry_var_t * const src 		TSRMLS_DC 	); 	 
